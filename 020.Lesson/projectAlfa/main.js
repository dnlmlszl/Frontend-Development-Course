
const words2 = [
    "alma",
    "programozás",
    "narancs",
    "keretrendszer",
    "tanfolyam",
    "hétvége",
    "tél",
    "iskola",
    "lunch",
    "serve",
    "chief",
    "again",
    "cloth",
    "cover",
    "monkey",
    "mirror",
    "unusual",
    "goose",
    "breakfast",
    "paragraph",
    "serious",
    "pony",
    "becoming",
    "grabbed",
    "early",
    "short",
    "got",
    "best",
    "hurry",
    "tool",
    "quickly",
    "rays",
    "stopped",
    "dangerous",
    "energy",
    "usual",
    "hurried",
    "brush",
    "team",
    "thought",
    "bigger",
    "flight",
    "select",
    "no",
    "whale",
    "riding",
    "replied",
    "kitchen",
    "transportation",
    "square",
    "differ",
    "massage",
    "cookies",
    "promised",
    "widely",
    "shore",
    "stage",
    "lose",
    "post",
    "took",
    "edge",
    "tropical",
    "victory",
    "mark",
    "older",
    "remove",
    "bet",
    "there",
    "whom",
    "table",
    "high",
    "satellites",
    "phrase",
    "north",
    "against",
    "poem",
    "orange",
    "blood",
    "date",
    "usually",
    "question",
    "slipped",
    "discover",
    "lamp",
    "hungry",
    "vegetable",
    "pictured",
    "voice",
    "tried",
    "rubbed",
    "doctor",
    "you",
    "am",
    "native",
    "captain",
    "describe",
    "roar",
    "uncle",
    "piano",
    "sink",
    "danger",
    "stranger",
    "dozen",
    "helpful",
    "bit",
    "identity",
    "rubbed",
    "natural",
    "period",
    "honor",
    "twice",
    "then",
    "wind",
    "ranch",
    "drink",
    "statement",
    "too",
    "belong",
    "fog",
    "sides",
    "sun",
    "glass",
    "fell",
    "partly",
    "safety",
    "riding",
    "lot",
    "tropical",
    "degree",
    "poem",
    "indicate",
    "tank",
    "vote",
    "national",
    "zero",
    "elephant",
    "fallen",
    "sense",
    "camera",
    "them",
    "desk",
    "cost",
    "barn",
    "middle",
    "anyone",
    "pile",
    "street",
    "doctor",
    "wool",
    "slide",
    "win",
    "western",
    "kind",
    "broad",
    "level",
    "torn",
    "dish",
    "longer",
    "troops",
    "atmosphere",
    "slept",
    "level",
    "studying",
    "necessary",
    "basic",
    "scientist",
    "inside",
    "stage",
    "seed",
    "long",
    "cake",
    "pen",
    "post",
    "regular",
    "breeze",
    "north",
    "order",
    "train",
    "result",
    "when",
    "floor",
    "product",
    "eventually",
    "dust",
    "army",
    "dark",
    "plan",
    "electric",
    "entirely",
    "especially",
    "thing",
    "tall",
    "frequently",
    "cross",
    "modern",
    "his",
    "bread",
    "necessary",
    "sound",
    "egg",
    "put",
    "took",
    "instead",
    "fell",
    "hundred",
    "tin",
    "list",
    "straw",
    "swam",
    "brother",
    "grass",
    "represent",
    "invented",
    "nest",
    "sight",
    "hurried",
    "farther",
    "selection",
    "feature",
    "mark",
    "material",
    "cover",
    "hour",
    "gulf",
    "space",
    "wonderful",
    "mainly",
    "energy",
    "saved",
    "each",
    "mark",
    "can",
    "double",
    "gently",
    "process",
    "castle",
    "strong",
    "biggest",
    "bank",
    "peace",
    "sides",
    "steady",
    "bowl",
    "shake",
    "box",
    "reach",
    "halfway",
    "or",
    "year",
    "planning",
    "receive",
    "born",
    "pony",
    "breath",
    "double",
    "fort",
    "sat",
    "direction",
    "plenty",
    "addition",
    "frighten",
    "express",
    "case",
    "take",
    "modern",
    "ask",
    "probably",
    "personal",
    "anybody",
    "possible",
    "charge",
    "correct",
    "break",
    "came",
    "letter",
    "complete",
    "sang",
    "interior",
    "nearby",
    "seeing",
    "break",
    "spring",
    "hearing",
    "thus",
    "ever",
    "weather",
    "mice",
    "south",
    "train",
    "curve",
    "fifteen",
    "swimming",
    "nearer",
    "until",
    "express",
    "music",
    "short",
    "forest",
    "walk",
    "count",
    "allow",
    "quickly",
    "burst",
    "clothes",
    "something",
    "easily",
    "statement",
    "constantly",
    "trouble",
    "till",
    "list",
    "seen",
    "avoid",
    "eye",
    "nervous",
    "shout",
    "men",
    "steam",
    "lips",
    "warn",
    "bark",
    "inside",
    "tomorrow",
    "satellites",
    "thing",
    "factor",
    "say",
    "bar",
    "donkey",
    "tomorrow",
    "paid",
    "goose",
    "fourth",
    "riding",
    "palace",
    "universe",
    "reader",
    "use",
    "period",
    "been",
    "weak",
    "went",
    "snake",
    "biggest",
    "evening",
    "whom",
    "shorter",
    "drink",
    "wrote",
    "wash",
    "sum",
    "getting",
    "jet",
    "fierce",
    "husband",
    "produce",
    "west",
    "attached",
    "brush",
    "speed",
    "dust",
    "several",
    "lack",
    "shelter",
    "introduced",
    "fire",
    "went",
    "your",
    "far",
    "water",
    "women",
    "swam",
    "numeral",
    "rose",
    "class",
    "desert",
    "shadow",
    "dangerous",
    "refer",
    "carry",
    "greater",
    "topic",
    "sunlight",
    "small",
    "kept",
    "itself",
    "eleven",
    "drew",
    "tongue",
    "higher",
    "every",
    "plain",
    "swam",
    "black",
    "piano",
    "run",
    "available",
    "soldier",
    "clay",
    "small",
    "change",
    "wash",
    "wire",
    "please",
    "away",
    "hay",
    "noon",
    "ten",
    "cabin",
    "turn",
    "camp",
    "orange",
    "bell",
    "person",
    "easy",
    "influence",
    "birds",
    "care",
    "sharp",
    "pass",
    "figure",
    "title",
    "getting",
    "chance",
    "type",
    "driving",
    "below",
    "size",
    "wet",
    "practice",
    "problem",
    "poetry",
    "factory",
    "which",
    "stove",
    "suggest",
    "cost",
    "fine",
    "respect",
    "itself",
    "breath",
    "pair",
    "wing",
    "fall",
    "drive",
    "seems",
    "thing",
    "environment",
    "chance",
    "clock",
    "chosen",
    "dozen",
    "recognize",
    "dangerous",
    "curve",
    "roof",
    "bottom",
    "thou",
    "applied",
    "examine",
    "pool",
    "making",
    "his",
    "harbor",
    "adjective",
    "thing",
    "building",
    "soft",
    "none",
    "hidden",
    "bet",
    "trade",
    "correct",
    "effect",
    "dinner",
    "fill",
    "stranger",
    "mass",
    "dream",
    "battle",
    "military",
    "scared",
    "its",
    "spirit",
    "eye",
    "correctly",
    "swam",
    "cabin",
    "west",
    "surface",
    "shallow",
    "lift",
    "bent",
    "game",
    "sick",
    "finish",
    "serious",
    "riding",
    "imagine",
    "answer",
    "select",
    "duck",
    "prove",
    "sentence",
    "war",
    "where",
    "great",
    "greatly",
];
const abc = [
    "A",
    "Á",
    "B",
    "C",
    "D",
    "E",
    "É",
    "F",
    "G",
    "H",
    "I",
    "Í",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "Ó",
    "Ö",
    "Ő",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "Ú",
    "Ü",
    "Ű",
    "V",
    "W",
    "X",
    "Y",
    "Z",
];

document.querySelector(".letters-holder").innerHTML = abc
    .map((char) => {
        return `<span>${char}</span>`;
    })
    .join("");

const randomWord = (arr) => {
    const randomIndex = Math.floor(Math.random() * arr.length);
    return arr[randomIndex];
};

const showWordStatus = (arr, className) => {
    document.querySelector(className).innerHTML = arr.map((item) => {
        return ` <span>${item}</span>`
    }).join('')
}

let secretWord = randomWord(words2);
let letters = secretWord.split('')
let wordStatus = letters.map((item) => {
    return '_'
})
let errors = 0
console.log(wordStatus);

showWordStatus(wordStatus, '.secret-word')

const handleClick = (e) => {
    if (e.target.tagName === "SPAN") {
        let clickedLetter = e.target.innerText
        let match = false
        for (let i in letters) {
            if (letters[i].toUpperCase() === clickedLetter) {
                wordStatus[i] = clickedLetter
                match = true
            }
        }
        showWordStatus(wordStatus, '.secret-word')
        errors = match ? errors : ++errors
        if (errors > 0 && errors <= 6) {
            document.getElementById(errors).style.display = 'block'
            return
        }
        if (errors === 6) {
            document.querySelector('.msg').innerHTML = '<h3>GAME OVER...</h3>'
            return
        }
        if (wordStatus.indexOf('_') === -1) {
            document.querySelector('.msg').innerHTML = '<h3>You win!</h3>'
            return
        }
    };
}

// const wordIsGuessed = () => {
//     return wordStatus.indexOf('_') === -1
// }

// const stopGame = (msg) => {
//     document.querySelector('.msg').innerHTML = msg
//     document.querySelectorAll('.hangman').forEach((el) => {
//         el.style.display = 'block'
//     })
//     document.querySelector('.letters-holder').removeEventListener('click', handleClick)
// }

// const handleClick = (e) => {
//     if (e.target.tagName === "SPAN") {
//         let clickedLetter = e.target.innerText
//         let match = false
//         for (let i in letters) {
//             if (letters[i].toUpperCase() === clickedLetter) {
//                 wordStatus[i] = clickedLetter
//                 match = true
//             }
//         }
//         showWordStatus(wordStatus, '.secret-word')
//         errors = match ? errors : ++errors
//         if (errors === 6) {
//             stopGame('<h3>GAME OVER...</h3><p>The secret word was: ' + secretWord + '</p>')
//         }
//         if (wordIsGuessed()) {
//             stopGame('<h3>You win!</h3><p>The secret word was: ' + secretWord + '</p>')
//         }
//     };
// }
// document.querySelector('.letters-holder').addEventListener('click', handleClick)

